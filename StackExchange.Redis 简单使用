using System;
using Newtonsoft.Json;
using StackExchange.Redis;

namespace redis_test
{
    class Program
    {
        private static ConnectionMultiplexer redis = ConnectionMultiplexer.Connect("localhost");
        private static IDatabase db = redis.GetDatabase();

        private static readonly RedisKey GeoKey = "GeoTest", IncrByKey = "CounterTest", StringKey = "string", HashKey = "hash";
        static void Main(string[] args)
        {

            db.StringSet("mykey", "value");
            Console.WriteLine(db.StringGet("mykey"));
            //直接命令
            Console.WriteLine(db.Execute("get", "mykey"));
            var user = new User();
            user.Id = 1;
            user.Name = "eric";

            db.HashSet("User_Table", user.Id, JsonConvert.SerializeObject(user));
            var userStr= db.HashGet("User_Table", user.Id);
            var _user= JsonConvert.DeserializeObject<User>(userStr);

            db.SortedSetAdd("Rank_Test", "eric1", 10);
            db.SortedSetAdd("Rank_Test", "eric2", 9);
            db.SortedSetAdd("Rank_Test", "eric3", 8);
            db.SortedSetAdd("Rank_Test", "eric4", 7);
            db.SortedSetAdd("Rank_Test", "eric5", 6);
            db.SortedSetAdd("Rank_Test", "eric6", 5);
            db.SortedSetAdd("Rank_Test", "eric7", 4);
           var ranks= db.SortedSetRangeByRank("Rank_Test", 0, 8, Order.Descending);
            //默认 从0 开始
           var ranks1=  db.SortedSetRank("Rank_Test", "eric5");
           var rank2= db.Execute("ZRANK", "Rank_Test", "eric2");

            //直接命令
            //db.Execute("ZADD", "Rank_Test", "10", "eric2");

            db.GeoAdd(GeoKey, 13.361389, 38.115556, "eric");
            db.GeoAdd(GeoKey, 15.087269, 37.502669, "tia");
            var result = db.GeoRadius(GeoKey, 15, 37, 200, GeoUnit.Kilometers, options: GeoRadiusOptions.WithCoordinates | GeoRadiusOptions.WithDistance | GeoRadiusOptions.WithGeoHash);
        }


      
    }

    public class User
    {
        public int Id { get; set; }
        public string Name { get; set; }
    }
   
}
